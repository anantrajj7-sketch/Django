# Generated by ChatGPT
from __future__ import annotations

import uuid

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Farmer",
            fields=[
                ("farmer_id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("name", models.CharField(max_length=255)),
                ("address", models.TextField(blank=True)),
                ("village", models.CharField(blank=True, max_length=255)),
                ("taluka_block", models.CharField(blank=True, max_length=255)),
                ("district", models.CharField(blank=True, max_length=255)),
                ("contact_no", models.CharField(blank=True, max_length=50)),
                ("education", models.CharField(blank=True, max_length=255)),
                ("caste_religion", models.CharField(blank=True, max_length=255)),
                ("farming_experience_years", models.PositiveIntegerField(default=0)),
                ("latitude", models.FloatField(blank=True, null=True)),
                ("longitude", models.FloatField(blank=True, null=True)),
                ("altitude", models.FloatField(blank=True, null=True)),
                ("family_males", models.PositiveIntegerField(default=0)),
                ("family_females", models.PositiveIntegerField(default=0)),
                ("family_children", models.PositiveIntegerField(default=0)),
                ("family_adult", models.PositiveIntegerField(default=0)),
            ],
            options={"ordering": ["name"]},
        ),
        migrations.CreateModel(
            name="AdaptationStrategy",
            fields=[
                ("strategy_id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("strategy", models.CharField(max_length=255)),
                ("aware", models.BooleanField(default=False)),
                ("adopted", models.BooleanField(default=False)),
                (
                    "farmer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="adaptation_strategies",
                        to="pmksy.farmer",
                    ),
                ),
            ],
            options={"ordering": ["farmer__name", "strategy"]},
        ),
        migrations.CreateModel(
            name="AnnualFamilyIncome",
            fields=[
                ("afi_id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("source", models.CharField(max_length=255)),
                ("income_rs", models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ("employment_days", models.PositiveIntegerField(default=0)),
                (
                    "farmer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="annual_income",
                        to="pmksy.farmer",
                    ),
                ),
            ],
            options={"ordering": ["farmer__name", "source"]},
        ),
        migrations.CreateModel(
            name="Asset",
            fields=[
                ("asset_id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("item_name", models.CharField(max_length=255)),
                ("quantity", models.PositiveIntegerField(default=0)),
                ("years_owned", models.PositiveIntegerField(default=0)),
                ("current_value", models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                (
                    "farmer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="assets",
                        to="pmksy.farmer",
                    ),
                ),
            ],
            options={"ordering": ["farmer__name", "item_name"]},
        ),
        migrations.CreateModel(
            name="ConsumptionPattern",
            fields=[
                ("cp_id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("crop", models.CharField(max_length=255)),
                ("crop_product", models.CharField(blank=True, max_length=255)),
                (
                    "consumption_kg_month",
                    models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True),
                ),
                ("purchased", models.BooleanField(default=False)),
                ("pds", models.BooleanField(default=False)),
                (
                    "farmer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="consumption_patterns",
                        to="pmksy.farmer",
                    ),
                ),
            ],
            options={"ordering": ["farmer__name", "crop"]},
        ),
        migrations.CreateModel(
            name="CostOfCultivation",
            fields=[
                ("cost_id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("crop_name", models.CharField(max_length=255)),
                ("particular", models.CharField(max_length=255)),
                ("quantity", models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ("cost_rs", models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                (
                    "farmer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="cultivation_costs",
                        to="pmksy.farmer",
                    ),
                ),
            ],
            options={"ordering": ["farmer__name", "crop_name", "particular"]},
        ),
        migrations.CreateModel(
            name="CropHistory",
            fields=[
                ("crop_hist_id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("crop_name", models.CharField(max_length=255)),
                ("variety", models.CharField(blank=True, max_length=255)),
                ("season", models.CharField(blank=True, max_length=100)),
                ("area_ha", models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ("production_kg", models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ("sold_market_kg", models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ("retained_seed_kg", models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ("home_consumption_kg", models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                (
                    "farmer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="crop_history",
                        to="pmksy.farmer",
                    ),
                ),
            ],
            options={"ordering": ["farmer__name", "crop_name"]},
        ),
        migrations.CreateModel(
            name="Enterprise",
            fields=[
                ("enterprise_id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("enterprise_type", models.CharField(max_length=255)),
                ("number", models.PositiveIntegerField(default=0)),
                ("production", models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ("home_consumption", models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ("sold_market", models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ("market_price", models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                (
                    "farmer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="enterprises",
                        to="pmksy.farmer",
                    ),
                ),
            ],
            options={"ordering": ["farmer__name", "enterprise_type"]},
        ),
        migrations.CreateModel(
            name="FinancialRecord",
            fields=[
                ("fin_id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("loan", models.BooleanField(default=False)),
                ("loan_purpose", models.CharField(blank=True, max_length=255)),
                ("credit_returned", models.BooleanField(default=False)),
                ("kcc", models.BooleanField(default=False)),
                ("kcc_used", models.BooleanField(default=False)),
                ("memberships", models.TextField(blank=True)),
                ("benefits", models.TextField(blank=True)),
                ("soil_testing", models.BooleanField(default=False)),
                ("training", models.TextField(blank=True)),
                ("info_sources", models.TextField(blank=True)),
                ("constraints", models.TextField(blank=True)),
                (
                    "farmer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="financials",
                        to="pmksy.farmer",
                    ),
                ),
            ],
            options={"ordering": ["farmer__name"]},
        ),
        migrations.CreateModel(
            name="IncomeFromCrops",
            fields=[
                ("income_crop_id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("season", models.CharField(blank=True, max_length=100)),
                ("crop_name", models.CharField(max_length=255)),
                ("production_qntl", models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ("yield_qntl_ha", models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ("price_rs_qntl", models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ("gross_income_rs", models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ("byproduct_income_rs", models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                (
                    "farmer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="crop_income",
                        to="pmksy.farmer",
                    ),
                ),
            ],
            options={"ordering": ["farmer__name", "crop_name"]},
        ),
        migrations.CreateModel(
            name="IrrigatedRainfed",
            fields=[
                ("ir_id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("crop", models.CharField(max_length=255)),
                ("sowing_date", models.DateField(blank=True, null=True)),
                ("harvesting_date", models.DateField(blank=True, null=True)),
                ("rainfed_area", models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ("irrigated_area", models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ("fertilizer_rate", models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                (
                    "farmer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="irrigated_rainfed",
                        to="pmksy.farmer",
                    ),
                ),
            ],
            options={"ordering": ["farmer__name", "crop"]},
        ),
        migrations.CreateModel(
            name="LandHolding",
            fields=[
                ("land_id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("category", models.CharField(blank=True, max_length=255)),
                ("total_area_ha", models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ("irrigated_area_ha", models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ("irrigation_source", models.CharField(blank=True, max_length=255)),
                ("irrigation_no", models.CharField(blank=True, max_length=255)),
                ("irrigation_latitude", models.FloatField(blank=True, null=True)),
                ("irrigation_longitude", models.FloatField(blank=True, null=True)),
                ("soil_details", models.TextField(blank=True)),
                (
                    "farmer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="land_holdings",
                        to="pmksy.farmer",
                    ),
                ),
            ],
            options={"ordering": ["farmer__name", "category"]},
        ),
        migrations.CreateModel(
            name="MarketPrice",
            fields=[
                ("price_id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("crop", models.CharField(max_length=255)),
                ("season", models.CharField(blank=True, max_length=100)),
                ("area_ha", models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ("production_tons", models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ("price_rs_qntl", models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                (
                    "farmer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="market_prices",
                        to="pmksy.farmer",
                    ),
                ),
            ],
            options={"ordering": ["farmer__name", "crop"]},
        ),
        migrations.CreateModel(
            name="MigrationRecord",
            fields=[
                ("migration_id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("age_gender", models.CharField(max_length=255)),
                ("reason", models.TextField(blank=True)),
                ("migration_type", models.CharField(blank=True, max_length=255)),
                ("remittance", models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                (
                    "farmer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="migration_records",
                        to="pmksy.farmer",
                    ),
                ),
            ],
            options={"ordering": ["farmer__name", "age_gender"]},
        ),
        migrations.CreateModel(
            name="NutrientManagement",
            fields=[
                ("nutrient_id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("season", models.CharField(blank=True, max_length=100)),
                ("crop_name", models.CharField(max_length=255)),
                ("fym_kg", models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ("nitrogen_kg", models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ("phosphate_kg", models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ("gromer_kg", models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ("other_fertilizer", models.TextField(blank=True)),
                (
                    "farmer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="nutrient_management",
                        to="pmksy.farmer",
                    ),
                ),
            ],
            options={"ordering": ["farmer__name", "crop_name"]},
        ),
        migrations.CreateModel(
            name="PestDiseaseRecord",
            fields=[
                ("pest_id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("season", models.CharField(blank=True, max_length=100)),
                ("pest_disease", models.CharField(max_length=255)),
                ("chemical_used", models.CharField(blank=True, max_length=255)),
                ("chemical_qty", models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ("chemical_cost", models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ("labour_days", models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ("labour_charge", models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                (
                    "farmer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="pest_diseases",
                        to="pmksy.farmer",
                    ),
                ),
            ],
            options={"ordering": ["farmer__name", "season", "pest_disease"]},
        ),
        migrations.CreateModel(
            name="WaterManagement",
            fields=[
                ("wm_id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("season", models.CharField(blank=True, max_length=100)),
                ("irrigation_source", models.CharField(blank=True, max_length=255)),
                ("irrigation_count", models.PositiveIntegerField(default=0)),
                ("depth", models.DecimalField(blank=True, decimal_places=2, max_digits=8, null=True)),
                ("energy_cost", models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ("labour_charge", models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                (
                    "farmer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="water_management",
                        to="pmksy.farmer",
                    ),
                ),
            ],
            options={"ordering": ["farmer__name", "season"]},
        ),
        migrations.CreateModel(
            name="WeedRecord",
            fields=[
                ("weed_id", models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ("season", models.CharField(blank=True, max_length=100)),
                ("weed_type", models.CharField(blank=True, max_length=255)),
                ("weeding_time", models.CharField(blank=True, max_length=255)),
                ("herbicide", models.CharField(blank=True, max_length=255)),
                ("chemical_cost", models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                ("labour_days", models.DecimalField(blank=True, decimal_places=2, max_digits=10, null=True)),
                ("labour_charge", models.DecimalField(blank=True, decimal_places=2, max_digits=12, null=True)),
                (
                    "farmer",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="weed_records",
                        to="pmksy.farmer",
                    ),
                ),
            ],
            options={"ordering": ["farmer__name", "season"]},
        ),
    ]
